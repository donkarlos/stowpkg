#! /bin/sh
#-----------------------------------------------------------------------------
#   gensubst			- Generate substitutions
#
#   Copyright (C) 2013-2019 Das Computerlabor (DCl-M)
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Founda-
#   tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#-----------------------------------------------------------------------------
LC_ALL=C; export LC_ALL

BQ=\` DQ=\" SQ=\' BS=\\ NL='
'
cs_upper=ABCDEFGHIJKLMNOPQRSTUVWXYZ
cs_lower=abcdefghijklmnopqrstuvwxyz
cs_digit=0123456789
cs_alpha=$cs_upper$cs_lower
cs_alnum=$cs_alpha$cs_digit

re_ident="[_$cs_alpha][_$cs_alnum]*"
shead='$('
sfoot=')'

case $# in
    0)	echo "$0: need SUBSTitution!" >&2
	subst=usage
	;;
    *)	subst=$1 vns=-
	case $subst in
	    quote|pathname|templates|FINISH_SEDFLAGS|substitute|expand|Makefile)
		_suffix= _prefix= _template="@${subst+_}@"
		_makefile=Makefile _mode= _bootstrap=n
		;;
	    *)	echo "$0 $subst: unknown SUBSTitution!" >&2
		subst=usage
		;;
	esac
	;;
esac

case $subst in
    usage)
	;;
    *)	while shift; do
	    case ${1+_$1} in
		_SED=*|_bootstrap=*|_mode=*|_makefile=*|		\
		_prefix=*|_suffix=*|_template=*|_srcdir=*)
		    vn=`expr "$1" : '\([^=]*\)='`
		    vv=`expr "$1" : '[^=]*=\(.*\)$'`
		    eval "_$vn"'=$vv'; vns=$vns$vn-
		    ;;
		_*=*)
		    echo "$0 $subst $1: invalid NAME=VALUE!" >&2
		    subst=usage; break
		    ;;
		_--)shift; break
		    ;;
		*)  break
		    ;;
	    esac
	done
	;;
esac

case $subst in
    pathname|templates|FINISH_SEDFLAGS|substitute|Makefile)
	case $vns in
	    *-SED-*)
		SED=$_SED	;;
	    *)	SED=`
		    $0 expand makefile="$_makefile" -- '$(SED)'
		` || SED=sed	;;
	esac; case $# in
	    0)	;;
	    *)  sx='s/$/ /;'
		case $_suffix in
		    ?*)	rs=`$0 quote SED="$SED" -- "$_suffix" rs`
			sx="$sx"'s/ /'"$rs"' /g;'
			;;
		esac
		sx="$sx"'s/ $//;s/^/ /;'
		case $_prefix in
		    ?*)	rs=`$0 quote SED="$SED" -- "$_prefix" rs`
			sx="$sx"'s/ / '"$rs"'/g;'
			;;
		esac
		sx="$sx"':1'"$NL"'s/\([ /]\)\.\//\1/;t1'"$NL"':2'"$NL"
		sx="$sx"'s/\( \.\.\/\(\.\.\/\)*\([^/ ][^/ ]*\/\)*\)[^./ ][^/ ]*\/\.\.\//\1/;t2'"$NL"
		sx="$sx"'s/\( \.\.\/\(\.\.\/\)*\([^/ ][^/ ]*\/\)*\)\.[^./ ][^/ ]*\/\.\.\//\1/;t2'"$NL"
		sx="$sx"'s/^ //'
		set shiftee `$SED "$sx" <<EOF
$*
EOF`;		shift
		;;
	esac
	;;
esac

case $subst in
    templates|FINISH_SEDFLAGS|substitute)
	thead=`expr "_$_template" : '_\([^_'"$cs_alnum"']*\)'`
	tfoot=`expr "_$_template" : '_[^_'"$cs_alnum"']*'"$re_ident"'\([^_'"$cs_alnum"']*\)$'`
	re_thead=`$0 quote SED="$SED" -- "$thead" re`
	re_tfoot=`$0 quote SED="$SED" -- "$tfoot" re`
	set shiftee `{
	    $SED '
		:1
		/'"$re_thead$re_ident$re_tfoot"'/!d;h
		s/\('"$re_thead$re_ident"'\)'"$re_tfoot"'.*$/\1/
		s/^.*'"$re_thead"'\('"$re_ident"'\)$/\1/p;g
		s/'"$re_thead$re_ident$re_tfoot"'//;b1
	    ' ${1+"$@"} </dev/null 2>&0 ||
		echo "$0 $subst: Update your AF_FINISH_FILES() invocation!" >&2
	} | sort | uniq`; shift
	case $# in
	    0)	echo "$0 $subst: No templates matching $BQ$_template$SQ found. Do you still need me?" >&2
		exit 0
		;;
	esac
	;;
esac

case $subst in
    quote)
	case $vns in
	    *-SED-*)
		SED=$_SED	;;
	    *)	SED=`
		    $0 expand makefile="$_makefile" -- '$(SED)'
		` || SED=sed	;;
	esac; case $# in
	    0)	quotee=; set shiftee;;
	    *)	quotee=$1	    ;;
	esac
	cs_shell=']^?*~! 	${}()<|>&;#'"$BQ$DQ$SQ$BS"'['
	sx_qre0='s/[]'	sx_qre1='^\.*$[]/'"$BS$BS"'&/g'
	sx_qrs0='s/[\&'	sx_qrs1=']/'"$BS$BS"'&/g'
	sx_qnl1=';s/'"$BS$NL"'/'"$BS$BS"'&/g'
	sx_qsh='s/'"$SQ"'/&'"$BS$BS"'&&/g;s/^/'"$SQ"'/;s/$/'"$SQ"'/'
	i=0; sx=':n'"$i$NL"'$!{;N;bn'"$i$NL"'}'
	while shift; do
	    case $# in
		0)  $SED "$sx"';:p'"$i$NL"'/^$/d' <<EOF
$quotee
EOF
		    break
		    ;;
	    esac; case $1 in
		re) sx="$sx$NL$sx_qre0${2-/}$sx_qre1$sx_qnl1"; ${2+shift}
		    ;;
		rs) sx="$sx$NL$sx_qrs0${2-/}$sx_qrs1$sx_qnl1"; ${2+shift}
		    ;;
		sh) sx="$sx"';:p'"$i"; i=`expr $i + 1`
		    sx="$sx$NL"'/^$/bq'"$i$NL"'/'"$BS$NL"'/bq'"$i"
		    sx="$sx$NL"'/['"$cs_shell"']/!bp'"$i$NL"':q'"$i$NL$sx_qsh"
		    ;;
	    esac
	done
	;;
    pathname|templates)
	echo ${1+"$@"}
	;;
    FINISH_SEDFLAGS)
	case $vns in
	    *-srcdir-*)
		srcdir=$_srcdir	;;
	    *)	srcdir=`
		    $0 expand makefile="$_makefile" -- '$(srcdir)'
		` || srcdir=.	;;
	esac
	rs_thead=`$0 quote SED="$SED" -- "$thead" re '|' rs`
	rs_tfoot=`$0 quote SED="$SED" -- "$tfoot" re '|' rs`
	rs_shead=`$0 quote SED="$SED" -- "$shead" rs '|' rs`
	rs_sfoot=`$0 quote SED="$SED" -- "$sfoot" rs '|' rs`
	gensubst_sed=`$SED 's/[^/][^/]*$/gensubst.sed/' <<EOF
$0
EOF`;	test -f "$gensubst_sed" || if test -f "$srcdir/$gensubst_sed"; then
	    gensubst_sed=$srcdir/$gensubst_sed
	else
	    echo "$0: $gensubst_sed: not found!" >&2; exit 1
	fi
	rs_gensubst_sed=`$0 quote SED="$SED" -- "$gensubst_sed" rs`
	$SED '
	    s/$/ /
	    s/\([^ ][^ ]*\) /s|'"$rs_thead"'\1'"$rs_tfoot"'|'"$rs_shead"'\1'"$rs_sfoot"'|g;/g
	    s/;$/'"$SQ $rs_shead"'FINISH_POST_SEDFLAGS'"$rs_sfoot"'/
	    s/^/'"$rs_shead"'FINISH_ANTE_SEDFLAGS'"$rs_sfoot"' -f '"$rs_gensubst_sed"' -e '"$SQ"'/
	' <<EOF
$*
EOF
	;;
    substitute)
	rs_thead=`$0 quote SED="$SED" -- "$thead" re '|' rs`
	rs_tfoot=`$0 quote SED="$SED" -- "$tfoot" re '|' rs`
	rs_shead=`$0 quote SED="$SED" -- "$shead" rs '|' rs`
	rs_sfoot=`$0 quote SED="$SED" -- "$sfoot" rs '|' rs`
	$SED '
	    s/$/ /
	    s/\([^ ][^ ]*\) /s|'"$rs_thead"'\1'"$rs_tfoot"'|'"$rs_shead"'\1'"$rs_sfoot"'|g;/g
	    s/;$//
	' <<EOF
$*
EOF
	;;
    Makefile)
	finish_sedflags=`$0 FINISH_SEDFLAGS SED="$SED" -- ${1+"$@"}`
	sx_finish_sedflags='/^\(FINISH_SEDFLAGS *= *\).*$/s//\1'"`
	    $0 quote SED="$SED" -- "$finish_sedflags" rs
	`"'/'
	case $_bootstrap in
	    y)	sx_substitute=`
		    $0 substitute SED="$SED" template='[@]_@' -- "$_makefile"
		`
		;;
	    *)	sx_substitute=
		;;
	esac
	$SED '
	    '"$sx_finish_sedflags"'
	    /\$(EXTRA_DIST)/s//$(af_dist_files) &/
	    /^Makefile:/s/$/ $(af_dist_files)/
	    /\.\/config\.status \$@/s//& autofinish/
	    /^[^: ]*clean[^: ]*:\(  *[^ ][^ ]*\)*  *clean-am/s//& clean-af/
	    /\$(am__CONFIG_DISTCLEAN_FILES)/s//& $(af_distclean_files)/
	    '"$sx_substitute"'
	' "$_makefile"
	;;
    expand)
	case ,$_mode, in
	    *,trace,*)
		ax='td=40'	;;
	    *)	ax='td=0'	;;
	esac; case ,$_mode, in
	    *,raw,*)
		ax="$ax"'; vpd=0; vpm=0'
		;;
	    *,get,*)
		ax="$ax"'; vpd=2; vpm=4+8+16+32'
		;;
	    *,eval,*)
		ax="$ax"'; vpd=2; vpm=2+4+8+16+32+64'
		;;
	    *)	ax="$ax"'; vpd=2; vpm=2+4+8+16+32'
		;;
	esac; for us in ${1+"$@"}; do
	    ax="$ax$NL		"'ui2us[++uc]='"$DQ$us$DQ"
	done
	nawk '
	    BEGIN {
		xd = uc = vc = 0
		'"$ax"'
		vkf = (((vpm/1)%2) >= 1); vxf = (((vpm/2)%2) >= 1)
	    }

	    function trace(fn,fa) {
		printf(sprintf("%%-%us%%s(\"%%s\")\n", xd), "#", fn, fa)
	    }

	    function strexp(us ,xs,vn) {
		if (++xd <= td) trace("strexp", us)
		xs = ""; while (   match(us, /\$\('"$re_ident"'\)/)	\
				|| match(us, /\${'"$re_ident"'}/)) {
		    xs = xs substr(us, 1, RSTART - 1)
		    vn = substr(us, RSTART + 2, RLENGTH - 3)
		    us = substr(us, RSTART + RLENGTH)
		    xs = xs varexp(vn)
		}
		--xd; return (xs us)
	    }

	    function varexp(vn ,vv) {
		if (++xd <= td) trace("varexp", vn)
		if (!vn2xc[vn] && (vn in ENVIRON)) {
		    vn2xc[vn] = 1; vn2vv[vn] = ENVIRON[vn]
		}
		if (!vn2xc[vn]) {
		    vv = vkf ? "${" vn "}" : ""
		} else if ((++vn2xc[vn] == 2) && vxf) {
		    vv = vn2vv[vn] = strexp(vn2vv[vn])
		} else {
		    vv = vn2vv[vn]
		}
		if (xd <= vpd) {
		    if (((vpm/ 4)%2) >= 1) gsub(/\\\n/, "\n", vv)
		    if (((vpm/ 8)%2) >= 1) gsub(/\n/, " ", vv)
		    if (((vpm/16)%2) >= 1) gsub(/[ \t]+/, " ", vv)
		    if (((vpm/32)%2) >= 1) {
			gsub(/(^[ \t]+|[ \t]+$)/, "", vv)
			gsub(/[ \t]*\n[ \t]*/, "\n", vv)
		    }
		    if (((vpm/64)%2) >= 1) {
			gsub(/'"$SQ"'/, "&\\\\&&", vv)
			sub(/^/, "'"$SQ"'", vv); sub(/$/, "'"$SQ"'", vv)
		    }
		}
		--xd; return (vv)
	    }

	    /^'"$re_ident"'[ \t]*:?=[ \t]*/ {
		match($0, /[ \t]*:?=[ \t]*/)
		vn = substr($0, 1, RSTART - 1)
		vv = substr($0, RSTART + RLENGTH)
		while ($0 ~ /\\$/) {
		    getline; vv = vv "\n" $0
		}; vn2xc[vn] = 1; vn2vv[vn] = vv
	    }

	    END {
		for (ui = 1; ui <= uc; ++ui)
		    printf("%s\n", strexp(ui2us[ui]))
	    }
	' "$_makefile" </dev/null 2>&0
	;;
    usage)
	cat >&2 <<EOF
Usage: $0 SUBST [NAME=VALUE ...] [--] ARGUMENT ...

Valid SUBSTitutions are:
  * expand STRING ...
	Expand STRING from makefile variable settings
  * quote STRING [OP [DELIM]] ...
	(OP,DELIM)-quote STRING, where OP
	 - re DELIM quotes for sed(1) 's///' matches,
	 - rs DELIM quotes for sed(1) 's///' substitutions
	 - sh       quotes for sh(1) and
	multiple OPs may be given
  * pathname FINISHED ...
	Transform each FINISHED by prepending PREFIX and/or appending SUFFIX
  * templates FINISHED ...
	Extract templates matching TEMPLATE from transformed FINISHEDs
  * substitute FINISHED ...
	Generate sed(1) 's///' statements that maps extracted templates to
	makefile variable substitutions (e.g., '@${subst+NAME}@' to '\$(NAME)')
  * FINISH_SEDFLAGS FINISHED ...
	Generate @${subst+FINISH_SEDFLAGS}@ value (including sed(1) 's///' statements
	mapping extracted templates)
  * Makefile FINISHED ...
	Patch makefile to work around GNU Automake deficiencies

Valid NAME=VALUE assignments are:
  - SED=\$(SED)		Override configured sed(1) command
  - makefile=MAKEFILE	Override default makefile 'Makefile'
  - mode=MODE		Use expand MODE
  - prefix=PREFIX	Specify pathname PREFIX
  - suffix=PREFIX	Specify pathname SUFFIX
  - template=TEMPLATE	Override default template @${subst+NAME}@, where NAME
			is abstract and matches any valid identifier
  - srcdir=\$(srcdir)	Override configured (top) source directory
EOF
	exit 2
	;;
esac
